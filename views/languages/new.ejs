<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Lingularity: Create a new language</title>
    <script defer src="Data Arrays/agents.js"></script>
    <script defer src="Data Arrays/purposeful.js"></script>
    <script defer src="Data Arrays/context.js"></script>
    <script defer src="Data Arrays/consonants.js"></script>
    <script defer src="Data Arrays/vowels.js"></script>
    <script defer src="Data Arrays/grammar.js"></script>
    <script defer src="server.js"></script>
    <link rel="stylesheet" href="public/assets">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Gloria+Hallelujah&display=swap" rel="stylesheet">
    

</head>

<nav>
    <a href="/">Home</a>
    <br>
    <a href="/languages/index">Languages</a>
    <br>
    <a href="/languages/new">Create a new language</a>
</nav>

    <style>

        body, select, button {
            font-family: 'gloria hallelujah', cursive;
        }

     nav {
    position: relative;
    grid-column: 1 / -1; /* Spans across all columns */
    background-color: #f0f0f0; /* Light background */
    padding: 10px; /* Padding for the nav bar */
    display: flex; /* Flex layout */
    justify-content: space-between; /* Evenly spaced items */
    border: 10px solid transparent; /* Create a border with the same width as the image border */;
    border-image: url('/assets/rb.png') 30 round; /* Replace with your image path */
    border-image-width: 7px;
}

h1 {
    text-align: center;
}

label {
    font-weight: bold;
    background-color: white;
}

/* Grid container */
.main-grid {
    display: grid;
    grid-template-columns: 1fr 2fr 1fr; /* Left sidebar, center grids, right sidebar */
    grid-template-rows: 1fr 1fr; /* Top and bottom center grids */
    height: 100vh; /* Full height of the viewport */
    gap: 10px; /* Optional: Adds some space between the grid items */
}

/* Sidebar container */
.sidebar-container {
    width: 200px;
    display: flex;
    flex-direction: column; /* Stack the contents vertically */
    background-image: url('/assets/lang1.png')}

/* Left sidebar */
.sidebar-left {
    grid-column: 1 / 2; /* Leftmost column */
    grid-row: 1 / -1; /* Spans across all rows */
    /* Other styles... */
}

/* Top center grid */
.top-middle {
    grid-column: 2 / 3; /* Middle column */
    grid-row: 1 / 2; /* Top row */
    /* Other styles... */
}

/* Bottom center grid */
.bottom-middle {
    grid-column: 2 / 3; /* Middle column */
    grid-row: 2 / 3; /* Bottom row */
    /* Other styles... */
}

/* Right sidebar */
.sidebar-right {
    grid-column: 3 / 4; /* Rightmost column */
    grid-row: 1 / -1; /* Spans across all rows */
    /* Other styles... */
}

    </style>
</head>
<body>
    <h1>Create a New Language!</h1>

<div class="main-grid"> <!-- Main grid layout -->

    <div class="sidebar-container"> <!-- Sidebar container -->
<div class="sidebar-left"> <!-- Left sidebar -->

    <form action="/languages" method="POST" onsubmit="return confirmSubmit()">
        <label for="name">Name of New Language:</label>
        <input type="text" name="name" required />
    
        <!-- Agent Selection -->
        <label for="agent">Agent:</label>
        <select id="agent-dropdown" name="agent">
            <option value="">Select an Agent</option>
            <% agents.forEach(agent => { %>
                <option value="<%= agent.name %>"><%= agent.name %></option>
            <% }); %>
        </select>
        <textarea id="agent-textarea" name="agent1" rows="5" required></textarea>
    
        <script>
            const agentDropdown = document.getElementById('agent-dropdown');
            const agentTextarea = document.getElementById('agent-textarea');
    
            agentDropdown.addEventListener('change', function(event) {
                fetch('/api/agents')
                    .then(response => response.json())
                    .then(agents => {
                        const selectedAgent = event.target.value;
                        const agent = agents.find(a => a.name === selectedAgent);
                        agentTextarea.value = agent ? agent.description : ''; // Update textarea
                    });
            });
    
            agentDropdown.addEventListener('change', function(event) {
                const selectedAgent = this.value;
                localStorage.setItem('selectedAgent', selectedAgent);
            });
        </script>
    
        <!-- Purpose Selection -->
        <label for="purpose">Purpose:</label>
        <select id="purpose-dropdown" name="purpose">
            <option value="">Select a Purpose</option>
            <% purposeful.forEach(purpose => { %>
                <option value="<%= purpose.context %>"><%= purpose.context %></option>
            <% }); %>
        </select>
        <textarea id="purpose-textarea" name="purpose1" rows="5" required></textarea>
    
        <script>
            const purposeDropdown = document.getElementById('purpose-dropdown');
            const purposeTextarea = document.getElementById('purpose-textarea');
    
            purposeDropdown.addEventListener('change', function(event) {
                fetch('/api/purposeful')
                    .then(response => response.json())
                    .then(purposeful => {
                        const selectedContext = event.target.value;
                        const foundPurpose = purposeful.find(p => p.context === selectedContext);
                        purposeTextarea.value = foundPurpose ? foundPurpose.purpose : ''; // Update textarea
                    });
            });
        </script>
    
        <!-- Context Selection -->
        <label for="context">Context:</label>
        <select id="context-dropdown" name="context">
            <option value="">Select a Context</option>
            <% context.forEach(ctx => { %>
                <option value="<%= ctx.name %>"><%= ctx.name %></option>
            <% }); %>
        </select>
        <textarea id="context-textarea" name="context1" rows="5" required></textarea>
    
        <script>
            const contextDropdown = document.getElementById('context-dropdown');
            const contextTextarea = document.getElementById('context-textarea');
    
            contextDropdown.addEventListener('change', function(event) {
                fetch('/api/context')
                    .then(response => response.json())
                    .then(context => {
                        const selectedContext = event.target.value;
                        const foundContext = context.find(c => c.name === selectedContext);
                        contextTextarea.value = foundContext ? foundContext.purpose : ''; // Update textarea
                    });
            });
        </script>
    
        <!-- Consonant Selection -->
        <label for="consonant">Consonant:</label>
        <select id="consonant-dropdown" name="consonant">
            <option value="">Select a Consonant</option>
            <% consonants.forEach(consonant => { %>
                <option value="<%= consonant.name %>"><%= consonant.name %></option>
            <% }); %>
        </select>
        <textarea id="consonant-textarea" name="consonant1" rows="5" required></textarea>
    
        <script>
            const consonantDropdown = document.getElementById('consonant-dropdown');
            const consonantTextarea = document.getElementById('consonant-textarea');
    
            consonantDropdown.addEventListener('change', function(event) {
                fetch('/api/consonants')
                    .then(response => response.json())
                    .then(consonants => {
                        const selectedConsonant = event.target.value;
                        const foundConsonant = consonants.find(c => c.name === selectedConsonant);
                        consonantTextarea.value = foundConsonant ? foundConsonant.purpose : ''; // Update textarea
                    });
            });
        </script>

<label for="vowel">Vowel:</label>
<select id="vowel-dropdown" name="vowel">
    <option value="">Select a Vowel</option>
    <% vowels.forEach(vowel => { %>
    <option value="<%= vowel.name %>"><%= vowel.name %></option>
    <% }); %>
</select>
<textarea id="vowel-textarea" name="vowel1" rows="5" required></textarea>

<script>
    const dropdown4 = document.getElementById('vowel-dropdown');
    const textarea4 = document.getElementById('vowel-textarea');

    dropdown4.addEventListener('change', function(event) {
        fetch('/api/vowels')
        .then(response => response.json())
        .then(vowels => {
            const selectedVowel = event.target.value;
            const selectedPurpose = vowels.find(v => v.name === selectedVowel);
            textarea4.value = selectedPurpose ? selectedPurpose.purpose : '';
        });
    });
</script>

<label for="grammar">Grammar:</label>
<select id="grammar-dropdown" name="grammar">
    <option value="">Select a Grammar</option>
    <% grammar.forEach(grammar => { %>
    <option value="<%= grammar.name %>"><%= grammar.name %></option>
    <% }); %>
</select>
<textarea id="grammar-textarea" name="grammar1" rows="5" required></textarea>

<script>
    const dropdown5 = document.getElementById('grammar-dropdown');
    const textarea5 = document.getElementById('grammar-textarea');

    dropdown5.addEventListener('change', function(event) {
        fetch('/api/grammar')
        .then(response => response.json())
        .then(grammar => {
            const selectedGrammar = event.target.value;
            const selectedPurpose = grammar.find(g => g.name === selectedGrammar);
            textarea5.value = selectedPurpose ? selectedPurpose.purpose : '';
        });
    });
</script>
    
        <button type="submit">Add Characteristics</button> <!-- Submit button -->
    </form>
    
    <script>
    function confirmSubmit() {
        alert(`Your new language has been created successfully!`);
        return true; // To ensure the form submits
    }
    </script>
    </div>
    
        </div>

        <div class="top-middle"> <!-- Top middle grid -->
            <!-- Content for top middle grid -->
            <p>Upgrade for full content!</p>
        </div>

        <div class="bottom-middle"> <!-- Bottom middle grid -->
            <!-- Content for bottom middle grid -->
            <p>Upgrade for full content!</p>
        </div>
<div class=""sidebar-container> <!-- Sidebar container -->
        <div class="sidebar-right"> <!-- Right sidebar -->
            <!-- Content for right sidebar -->
            <p>Upgrade for full content!</p>
        </div>
        </div>
    </div>
</body>
</html>